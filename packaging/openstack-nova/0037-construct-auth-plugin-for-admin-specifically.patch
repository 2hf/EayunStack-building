From a7987ee6d00fcff931f1811498490aceea24e1f6 Mon Sep 17 00:00:00 2001
From: apporc <appleorchard2000@gmail.com>
Date: Tue, 8 Mar 2016 11:49:18 +0800
Subject: [PATCH 37/38] construct auth plugin for admin specifically

Change-Id: Ice417bd97a0022cee71e3125cecfca371e754765
Signed-off-by: apporc <appleorchard2000@gmail.com>
---
 nova/volume/cinder.py | 39 ++++++++++++++++++++++++++++++++++-----
 1 file changed, 34 insertions(+), 5 deletions(-)

diff --git a/nova/volume/cinder.py b/nova/volume/cinder.py
index 0dccd99..c8ab56b 100644
--- a/nova/volume/cinder.py
+++ b/nova/volume/cinder.py
@@ -26,6 +26,7 @@ from cinderclient import exceptions as cinder_exception
 from cinderclient.v1 import client as v1_client
 from keystoneclient import exceptions as keystone_exception
 from keystoneclient import session
+from keystoneclient.auth.identity import v2 as v2_auth
 from oslo.config import cfg
 import six
 import six.moves.urllib.parse as urlparse
@@ -39,10 +40,10 @@ from nova.openstack.common import strutils
 
 cinder_opts = [
     cfg.StrOpt('catalog_info',
-            default='volumev2:cinderv2:publicURL',
-            help='Info to match when looking for cinder in the service '
-                 'catalog. Format is: separated values of the form: '
-                 '<service_type>:<service_name>:<endpoint_type>'),
+               default='volumev2:cinderv2:publicURL',
+               help='Info to match when looking for cinder in the service '
+                    'catalog. Format is: separated values of the form: '
+                    '<service_type>:<service_name>:<endpoint_type>'),
     cfg.StrOpt('endpoint_template',
                help='Override service catalog lookup with template for cinder '
                     'endpoint e.g. http://localhost:8776/v1/%(project_id)s'),
@@ -55,6 +56,17 @@ cinder_opts = [
                 default=True,
                 help='Allow attach between instance and volume in different '
                      'availability zones.'),
+    cfg.StrOpt('admin_auth_url',
+               default='http://localhost:5000/v2.0',
+               help='Authorization URL for connecting to cinder in admin'
+                    'context.'),
+    cfg.StrOpt('admin_username',
+               help='Username for connecting to cinder in admin context'),
+    cfg.StrOpt('admin_password',
+               help='Password for connecting to cinder in admin context',
+               secret=True),
+    cfg.StrOpt('admin_tenant_name',
+               help='Tenant name for connecting to cinder in admin context.')
 ]
 
 CONF = cfg.CONF
@@ -78,6 +90,7 @@ session.Session.register_conf_options(CONF,
 LOG = logging.getLogger(__name__)
 
 _SESSION = None
+_ADMIN_AUTH = None
 _V1_ERROR_RAISED = False
 
 
@@ -85,13 +98,18 @@ def reset_globals():
     """Testing method to reset globals.
     """
     global _SESSION
+    global _ADMIN_AUTH
     _SESSION = None
+    _ADMIN_AUTH = None
 
 
 def cinderclient(context):
     global _SESSION
+    global _ADMIN_AUTH
     global _V1_ERROR_RAISED
 
+    auth = None
+
     if not _SESSION:
         _SESSION = session.Session.load_from_conf_options(CONF,
                                                           CINDER_OPT_GROUP)
@@ -99,7 +117,18 @@ def cinderclient(context):
     url = None
     endpoint_override = None
 
-    auth = context.get_auth_plugin()
+    if context.is_admin and not context.auth_token:
+        if not _ADMIN_AUTH:
+            _ADMIN_AUTH = v2_auth.Password(
+                auth_url=CONF.cinder.admin_auth_url,
+                username=CONF.cinder.admin_username,
+                password=CONF.cinder.admin_password,
+                tenant_name=CONF.cinder.admin_tenant_name)
+        auth = _ADMIN_AUTH
+
+    elif context.auth_token:
+        auth = context.get_auth_plugin()
+
     service_type, service_name, interface = CONF.cinder.catalog_info.split(':')
 
     service_parameters = {'service_type': service_type,
-- 
2.4.3


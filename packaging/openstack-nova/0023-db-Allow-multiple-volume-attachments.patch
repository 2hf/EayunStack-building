From 788cfe65273bb6abd8d035811a41a531c0a0613b Mon Sep 17 00:00:00 2001
From: Krisztian Gacsal <krisztian.gacsal@ericsson.com>
Date: Thu, 18 Jun 2015 13:50:14 +0200
Subject: [PATCH 23/34] db: Allow multiple volume attachments

Get bdm from database by volume id and instance id.

Partially-implements: blueprint multi-attach-volume

Related patches:

REST API changes:
https://review.openstack.org/153038

python-cinderclient:
https://review.openstack.org/#/c/85856/

cinder:
https://review.openstack.org/#/c/85847/

Change-Id: I695caf016374a930ea8ffdd0e2a825c2c73acc7c
(cherry picked from commit f9113ca4e1ea77bcd3be3b40be3ca26f62b9b0c0)

Conflicts:
	nova/tests/unit/db/test_db_api.py
---
 nova/db/api.py               |  8 ++++++++
 nova/db/sqlalchemy/api.py    | 13 ++++++++++++-
 nova/tests/db/test_db_api.py | 20 ++++++++++++++++++++
 3 files changed, 40 insertions(+), 1 deletion(-)

diff --git a/nova/db/api.py b/nova/db/api.py
index ab8b689..4172723 100644
--- a/nova/db/api.py
+++ b/nova/db/api.py
@@ -1214,6 +1214,14 @@ def block_device_mapping_get_all_by_instance(context, instance_uuid,
                                                          use_slave)
 
 
+def block_device_mapping_get_by_instance_and_volume_id(context, volume_id,
+                                                       instance_uuid,
+                                                       columns_to_join=None):
+    """Get block device mapping for a given volume ID and instance UUID."""
+    return IMPL.block_device_mapping_get_by_instance_and_volume_id(
+        context, volume_id, instance_uuid, columns_to_join)
+
+
 def block_device_mapping_get_by_volume_id(context, volume_id,
         columns_to_join=None):
     """Get block device mapping for a given volume."""
diff --git a/nova/db/sqlalchemy/api.py b/nova/db/sqlalchemy/api.py
index dfe6b13..4aa341d 100644
--- a/nova/db/sqlalchemy/api.py
+++ b/nova/db/sqlalchemy/api.py
@@ -3669,8 +3669,19 @@ def block_device_mapping_get_all_by_instance(context, instance_uuid,
 
 
 @require_context
+def block_device_mapping_get_by_instance_and_volume_id(context, volume_id,
+                                                       instance_uuid,
+                                                       columns_to_join=None):
+    return _block_device_mapping_get_query(context,
+            columns_to_join=columns_to_join).\
+                 filter_by(volume_id=volume_id).\
+                 filter_by(instance_uuid=instance_uuid).\
+                 first()
+
+
+@require_context
 def block_device_mapping_get_by_volume_id(context, volume_id,
-        columns_to_join=None):
+                                          columns_to_join=None):
     return _block_device_mapping_get_query(context,
             columns_to_join=columns_to_join).\
                  filter_by(volume_id=volume_id).\
diff --git a/nova/tests/db/test_db_api.py b/nova/tests/db/test_db_api.py
index f6e567d..0c7cb7a 100644
--- a/nova/tests/db/test_db_api.py
+++ b/nova/tests/db/test_db_api.py
@@ -4820,6 +4820,26 @@ class BlockDeviceMappingTestCase(test.TestCase):
         self.assertEqual(bdm['volume_id'], 'fake_id')
         self.assertEqual(bdm['instance']['uuid'], self.instance['uuid'])
 
+    def test_block_device_mapping_get_by_instance_and_volume_id(self):
+        self._create_bdm({'volume_id': 'fake_id'})
+        bdm = db.block_device_mapping_get_by_instance_and_volume_id(self.ctxt,
+                'fake_id', self.instance['uuid'])
+        self.assertEqual(bdm['volume_id'], 'fake_id')
+        self.assertEqual(bdm['instance_uuid'], self.instance['uuid'])
+
+    def test_block_device_mapping_get_by_instance_and_volume_id_multiattach(
+            self):
+        instance_uuid1 = '69f5c254-1a5b-4fff-acf7-cb369904f58f'
+        instance_uuid2 = '69f5c254-1a5b-4fff-acf7-cb369904f59f'
+        self._create_bdm({'volume_id': 'fake_id',
+                          'instance_uuid': instance_uuid1})
+        self._create_bdm({'volume_id': 'fake_id',
+                          'instance_uuid': instance_uuid2})
+        bdm = db.block_device_mapping_get_by_instance_and_volume_id(self.ctxt,
+                'fake_id', instance_uuid2)
+        self.assertEqual(bdm['volume_id'], 'fake_id')
+        self.assertEqual(bdm['instance_uuid'], instance_uuid2)
+
 
 class AgentBuildTestCase(test.TestCase, ModelsObjectComparatorMixin):
 
-- 
2.4.3


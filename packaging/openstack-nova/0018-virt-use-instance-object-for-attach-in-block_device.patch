From ad0d378bd2ef30d74eff5ac4f9198f12906ea701 Mon Sep 17 00:00:00 2001
From: Mike Durnosvistov <mdurnosvistov@mirantis.com>
Date: Tue, 21 Oct 2014 16:51:27 +0300
Subject: [PATCH 18/34] virt: use instance object for attach in block_device

It will be better if we'll use `instance` like object.

Change-Id: I56b3931da7339d2d350a7d1368dd39c7e398d3e6
(cherry picked from commit 8f82aabf76005cae1504a18e9a2dcddb75a33c1f)
---
 nova/tests/compute/test_compute.py   | 2 +-
 nova/tests/virt/test_block_device.py | 4 +++-
 nova/virt/block_device.py            | 2 +-
 3 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/nova/tests/compute/test_compute.py b/nova/tests/compute/test_compute.py
index 878fc25..1f97c06 100644
--- a/nova/tests/compute/test_compute.py
+++ b/nova/tests/compute/test_compute.py
@@ -571,7 +571,7 @@ class ComputeVolumeTestCase(BaseTestCase):
                 'delete_on_termination': False,
             })]
             prepped_bdm = self.compute._prep_block_device(
-                    self.context, self.instance, block_device_mapping)
+                    self.context, self.instance_object, block_device_mapping)
             mock_save.assert_called_once_with(self.context)
             volume_driver_bdm = prepped_bdm['block_device_mapping'][0]
             self.assertEqual(volume_driver_bdm['connection_info']['serial'],
diff --git a/nova/tests/virt/test_block_device.py b/nova/tests/virt/test_block_device.py
index 6ace591..633a129 100644
--- a/nova/tests/virt/test_block_device.py
+++ b/nova/tests/virt/test_block_device.py
@@ -331,7 +331,9 @@ class TestDriverBlockDevice(test.NoDBTestCase):
                        lambda: elevated_context)
         self.mox.StubOutWithMock(driver_bdm._bdm_obj, 'save')
         self.mox.StubOutWithMock(encryptors, 'get_encryption_metadata')
-        instance = {'id': 'fake_id', 'uuid': 'fake_uuid'}
+        instance_detail = {'id': '123', 'uuid': 'fake_uuid'}
+        instance = fake_instance.fake_instance_obj(self.context,
+                                                   **instance_detail)
         connector = {'ip': 'fake_ip', 'host': 'fake_host'}
         connection_info = {'data': {'access_mode': access_mode}}
         expected_conn_info = {'data': {'access_mode': access_mode},
diff --git a/nova/virt/block_device.py b/nova/virt/block_device.py
index 339b353..b633711 100644
--- a/nova/virt/block_device.py
+++ b/nova/virt/block_device.py
@@ -265,7 +265,7 @@ class DriverVolumeBlockDevice(DriverBlockDevice):
         if 'data' in connection_info:
             mode = connection_info['data'].get('access_mode', 'rw')
         if volume['attach_status'] == "detached":
-            volume_api.attach(context, volume_id, instance['uuid'],
+            volume_api.attach(context, volume_id, instance.uuid,
                               self['mount_device'], mode=mode)
 
     @update_db
-- 
2.4.3


From 444296010698d69a8e746817b5ae125892f6f7ba Mon Sep 17 00:00:00 2001
From: huntxu <mhuntxu@gmail.com>
Date: Tue, 15 Sep 2015 16:24:16 +0800
Subject: [PATCH 25/25] Refine database relationships.

Signed-off-by: huntxu <mhuntxu@gmail.com>
---
 .../alembic_migrations/eayun_qos_db_refine_ops.py  | 54 ++++++++++++++++++++++
 .../db/migration/alembic_migrations/versions/HEAD  |  2 +-
 .../versions/eayun_neutron_qos_db_refine.py        | 36 +++++++++++++++
 neutron/db/qos/qos_db.py                           | 30 ++++++------
 4 files changed, 104 insertions(+), 18 deletions(-)
 create mode 100644 neutron/db/migration/alembic_migrations/eayun_qos_db_refine_ops.py
 create mode 100644 neutron/db/migration/alembic_migrations/versions/eayun_neutron_qos_db_refine.py

diff --git a/neutron/db/migration/alembic_migrations/eayun_qos_db_refine_ops.py b/neutron/db/migration/alembic_migrations/eayun_qos_db_refine_ops.py
new file mode 100644
index 0000000..cc99ef8
--- /dev/null
+++ b/neutron/db/migration/alembic_migrations/eayun_qos_db_refine_ops.py
@@ -0,0 +1,54 @@
+# Copyright (c) 2015 Eayun, Inc.
+# All rights reserved.
+#
+#    Licensed under the Apache License, Version 2.0 (the "License"); you may
+#    not use this file except in compliance with the License. You may obtain
+#    a copy of the License at
+#
+#         http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+#    License for the specific language governing permissions and limitations
+#    under the License.
+
+from alembic import op
+
+
+# This needs manually dropping the existing foreign key constraints by
+# executing "ALTER TABLE `table_name` DROP FOREIGN KEY `constraint_name`;".
+# The constraint names are generated by the database automatically because
+# in qos_init_ops.py we didn't specify the names. The constraint names could
+# be found via "SHOW CREATE TABLE table_name".
+# We have to do the aforementioned hack before this upgrade because by now
+# I DON'T know how to do this with alembic.
+def upgrade():
+    op.create_foreign_key(
+        'fk-eayun_qoss-port_id-ports',
+        'eayun_qoss', 'ports', ['port_id'], ['id'],
+        ondelete='SET NULL')
+    op.create_foreign_key(
+        'fk-eayun_qoss-router_id-routers',
+        'eayun_qoss', 'routers', ['router_id'], ['id'],
+        ondelete='SET NULL')
+    op.create_foreign_key(
+        'fk-eayun_qosqueues-qos_id-eayun_qoss',
+        'eayun_qosqueues', 'eayun_qoss', ['qos_id'], ['id'],
+        ondelete='CASCADE')
+    op.create_foreign_key(
+        'fk-eayun_qosqueues-parent_id-eayun_qosqueues',
+        'eayun_qosqueues', 'eayun_qosqueues', ['parent_id'], ['id'],
+        ondelete='CASCADE')
+    op.create_foreign_key(
+        'fk-eayun_qosfilters-qos_id-eayun_qoss',
+        'eayun_qosfilters', 'eayun_qoss', ['qos_id'], ['id'],
+        ondelete='CASCADE')
+    op.create_foreign_key(
+        'fk-eayun_qosfilters-queue_id-eayun_qosqueues',
+        'eayun_qosfilters', 'eayun_qosqueues', ['queue_id'], ['id'],
+        ondelete='SET NULL')
+
+
+def downgrade():
+    pass
diff --git a/neutron/db/migration/alembic_migrations/versions/HEAD b/neutron/db/migration/alembic_migrations/versions/HEAD
index 21f478f..062c02a 100644
--- a/neutron/db/migration/alembic_migrations/versions/HEAD
+++ b/neutron/db/migration/alembic_migrations/versions/HEAD
@@ -1 +1 @@
-eayun_neutron_qos
+eayun_neutron_qos_db_refine
diff --git a/neutron/db/migration/alembic_migrations/versions/eayun_neutron_qos_db_refine.py b/neutron/db/migration/alembic_migrations/versions/eayun_neutron_qos_db_refine.py
new file mode 100644
index 0000000..6fe5689
--- /dev/null
+++ b/neutron/db/migration/alembic_migrations/versions/eayun_neutron_qos_db_refine.py
@@ -0,0 +1,36 @@
+# Copyright 2015 OpenStack Foundation
+#
+#    Licensed under the Apache License, Version 2.0 (the "License"); you may
+#    not use this file except in compliance with the License. You may obtain
+#    a copy of the License at
+#
+#         http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+#    License for the specific language governing permissions and limitations
+#    under the License.
+#
+
+"""eayun_neutron_qos_db_refine
+
+Revision ID: eayun_neutron_qos_db_refine
+Revises: eayun_neutron_qos
+Create Date: 2015-12-11 12:00:00.000000
+
+"""
+from neutron.db.migration.alembic_migrations import eayun_qos_db_refine_ops
+
+
+# revision identifiers, used by Alembic.
+revision = 'eayun_neutron_qos_db_refine'
+down_revision = 'eayun_neutron_qos'
+
+
+def upgrade():
+    eayun_qos_db_refine_ops.upgrade()
+
+
+def downgrade():
+    eayun_qos_db_refine_ops.downgrade()
diff --git a/neutron/db/qos/qos_db.py b/neutron/db/qos/qos_db.py
index 891c213..d1531c9 100644
--- a/neutron/db/qos/qos_db.py
+++ b/neutron/db/qos/qos_db.py
@@ -35,8 +35,10 @@ class Qos(model_base.BASEV2, models_v2.HasId, models_v2.HasTenant):
     description = sa.Column(sa.String(255))
     direction = sa.Column(sa.Enum('ingress', 'egress', name='qoss_direction'),
                           nullable=False)
-    port_id = sa.Column(sa.String(36), sa.ForeignKey('ports.id'))
-    router_id = sa.Column(sa.String(36), sa.ForeignKey('routers.id'))
+    port_id = sa.Column(sa.String(36),
+                        sa.ForeignKey('ports.id', ondelete='SET NULL'))
+    router_id = sa.Column(sa.String(36),
+                          sa.ForeignKey('routers.id', ondelete='SET NULL'))
     rate = sa.Column(sa.BigInteger, nullable=False)
     burst = sa.Column(sa.BigInteger)
     cburst = sa.Column(sa.BigInteger)
@@ -44,14 +46,10 @@ class Qos(model_base.BASEV2, models_v2.HasId, models_v2.HasTenant):
                                  sa.ForeignKey('eayun_qosqueues.id'))
     port = orm.relationship(
         models_v2.Port,
-        backref=orm.backref(
-            'eayun_qoss', cascade='all,delete', lazy='joined', uselist=True),
-        primaryjoin='Port.id==Qos.port_id')
+        backref=orm.backref('eayun_qoss', lazy='joined', uselist=True))
     router = orm.relationship(
         l3_db.Router,
-        backref=orm.backref(
-            'eayun_qoss', cascade='all,delete', lazy='joined', uselist=True),
-        primaryjoin='Router.id==Qos.router_id')
+        backref=orm.backref('eayun_qoss', lazy='joined', uselist=True))
     default_queue = orm.relationship(
         "QosQueue",
         primaryjoin='QosQueue.id==Qos.default_queue_id', post_update=True)
@@ -61,10 +59,11 @@ class QosQueue(model_base.BASEV2, models_v2.HasId, models_v2.HasTenant):
     __tablename__ = 'eayun_qosqueues'
 
     qos_id = sa.Column(sa.String(36),
-                       sa.ForeignKey('eayun_qoss.id'),
+                       sa.ForeignKey('eayun_qoss.id', ondelete='CASCADE'),
                        nullable=False)
     parent_id = sa.Column(sa.String(36),
-                          sa.ForeignKey('eayun_qosqueues.id'))
+                          sa.ForeignKey('eayun_qosqueues.id',
+                                        ondelete='CASCADE'))
     prio = sa.Column(sa.Integer)
     rate = sa.Column(sa.BigInteger, nullable=False)
     ceil = sa.Column(sa.BigInteger)
@@ -90,7 +89,8 @@ class QosFilter(model_base.BASEV2, models_v2.HasId, models_v2.HasTenant):
                        sa.ForeignKey('eayun_qoss.id', ondelete='CASCADE'),
                        nullable=False)
     queue_id = sa.Column(sa.String(36),
-                         sa.ForeignKey('eayun_qosqueues.id'))
+                         sa.ForeignKey('eayun_qosqueues.id',
+                                       ondelete='SET NULL'))
     prio = sa.Column(sa.Integer, nullable=False)
     protocol = sa.Column(sa.Integer)
     src_port = sa.Column(sa.Integer)
@@ -101,14 +101,10 @@ class QosFilter(model_base.BASEV2, models_v2.HasId, models_v2.HasTenant):
     qos = orm.relationship(
         Qos,
         backref=orm.backref(
-            'filters', cascade='all,delete', lazy='joined', uselist=True),
-        primaryjoin='Qos.id==QosFilter.qos_id')
+            'filters', cascade='all,delete', lazy='joined', uselist=True))
     queue = orm.relationship(
         QosQueue,
-        backref=orm.backref(
-            'attached_filters', cascade='all,delete', lazy='joined',
-            uselist=True),
-        primaryjoin='QosQueue.id==QosFilter.queue_id')
+        backref=orm.backref('attached_filters', lazy='joined', uselist=True))
 
 
 class QosDbMixin(ext_qos.QosPluginBase, base_db.CommonDbMixin):
-- 
2.6.4


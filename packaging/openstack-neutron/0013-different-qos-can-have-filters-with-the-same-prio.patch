From c4b540e3ff0f88c2e6dc97958f8743aa291dae6c Mon Sep 17 00:00:00 2001
From: huntxu <mhuntxu@gmail.com>
Date: Wed, 10 Jun 2015 16:35:54 +0800
Subject: [PATCH 13/15] different qos can have filters with the same prio

Fixes: redmine #4003

Signed-off-by: huntxu <mhuntxu@gmail.com>
---
 neutron/db/migration/alembic_migrations/eayun_qos_init_ops.py |  2 +-
 neutron/db/qos/qos_db.py                                      | 11 ++++++++++-
 neutron/extensions/qos.py                                     |  5 +++++
 3 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/neutron/db/migration/alembic_migrations/eayun_qos_init_ops.py b/neutron/db/migration/alembic_migrations/eayun_qos_init_ops.py
index f05d549..31028f3 100644
--- a/neutron/db/migration/alembic_migrations/eayun_qos_init_ops.py
+++ b/neutron/db/migration/alembic_migrations/eayun_qos_init_ops.py
@@ -58,7 +58,7 @@ def upgrade():
         sa.Column('tenant_id', sa.String(length=255), nullable=True),
         sa.Column('qos_id', sa.String(length=36), nullable=False),
         sa.Column('queue_id', sa.String(length=36), nullable=True),
-        sa.Column('prio', sa.Integer(), nullable=False, unique=True),
+        sa.Column('prio', sa.Integer(), nullable=False),
         sa.Column('protocol', sa.Integer(), nullable=True),
         sa.Column('src_port', sa.Integer(), nullable=True),
         sa.Column('dst_port', sa.Integer(), nullable=True),
diff --git a/neutron/db/qos/qos_db.py b/neutron/db/qos/qos_db.py
index 49ef0c1..d58d2b8 100644
--- a/neutron/db/qos/qos_db.py
+++ b/neutron/db/qos/qos_db.py
@@ -91,7 +91,7 @@ class QosFilter(model_base.BASEV2, models_v2.HasId, models_v2.HasTenant):
                        nullable=False)
     queue_id = sa.Column(sa.String(36),
                          sa.ForeignKey('eayun_qosqueues.id'))
-    prio = sa.Column(sa.Integer, nullable=False, unique=True)
+    prio = sa.Column(sa.Integer, nullable=False)
     protocol = sa.Column(sa.Integer)
     src_port = sa.Column(sa.Integer)
     dst_port = sa.Column(sa.Integer)
@@ -469,6 +469,9 @@ class QosDbMixin(ext_qos.QosPluginBase, base_db.CommonDbMixin):
 
         return self._fields(res, fields)
 
+    def _same_prio_filter_in_qos(self, qos, prio):
+        return prio in map(lambda f: f.prio, qos.filters)
+
     def create_qos_filter_bulk(self, context, qos_filter):
         return self._create_bulk('qos_filter', context, qos_filter)
 
@@ -481,6 +484,8 @@ class QosDbMixin(ext_qos.QosPluginBase, base_db.CommonDbMixin):
             self._check_queue_in_qos(qos_db.id, qos_queue_db)
             if qos_queue_db.subqueues:
                 raise ext_qos.QosQueueHasSub(qos_queue_id=qos_queue_db.id)
+        if self._same_prio_filter_in_qos(qos_db, qos_filter['prio']):
+            raise ext_qos.QosDuplicateFilterPrioValue(prio=qos_filter['prio'])
         tenant_id = self._get_tenant_id_for_create(context, qos_filter)
         qos_filter_id = qos_filter.get('id') or uuidutils.generate_uuid()
         with context.session.begin(subtransactions=True):
@@ -500,6 +505,7 @@ class QosDbMixin(ext_qos.QosPluginBase, base_db.CommonDbMixin):
 
     def update_qos_filter(self, context, id, qos_filter):
         qos_filter = qos_filter['qos_filter']
+        new_prio = qos_filter.get('prio', None)
 
         with context.session.begin(subtransactions=True):
             qos_filter_db = self._get_qos_filter(context, id)
@@ -509,6 +515,9 @@ class QosDbMixin(ext_qos.QosPluginBase, base_db.CommonDbMixin):
                 self._check_queue_in_qos(qos_filter_db.qos_id, qos_queue_db)
                 if qos_queue_db.subqueues:
                     raise ext_qos.QosQueueHasSub(qos_queue_id=qos_queue_db.id)
+            if new_prio is not None and new_prio != qos_filter_db.prio:
+                if self._same_prio_filter_in_qos(qos_filter_db.qos, new_prio):
+                    raise ext_qos.QosDuplicateFilterPrioValue(prio=new_prio)
             qos_filter_db.update(qos_filter)
         return self._make_qos_filter_dict(qos_filter_db)
 
diff --git a/neutron/extensions/qos.py b/neutron/extensions/qos.py
index f967ab8..f2eec1b 100644
--- a/neutron/extensions/qos.py
+++ b/neutron/extensions/qos.py
@@ -108,6 +108,11 @@ class QosInvalidFilterPrioValue(nexception.InvalidInput):
                 "It must be None or between 0 to 4294967295.")
 
 
+class QosDuplicateFilterPrioValue(nexception.InvalidInput):
+    message = _("Invalid value for filter prio: %(prio)s. "
+                "There is already a filter with the same prio under the qos.")
+
+
 class QosInvalidProtocolValue(nexception.InvalidInput):
     message = _("Invalid value for protocol: %(protocol)s. "
                 "It must be None or between 1 to 255.")
-- 
2.4.4

